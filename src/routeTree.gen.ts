/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./pages/__root";
import { Route as UserProfileImport } from "./pages/user-profile";
import { Route as TvSeriesImport } from "./pages/tv-series";
import { Route as MoviesImport } from "./pages/movies";
import { Route as BookmarksImport } from "./pages/bookmarks";
import { Route as IndexImport } from "./pages/index";

// Create/Update Routes

const UserProfileRoute = UserProfileImport.update({
  path: "/user-profile",
  getParentRoute: () => rootRoute,
} as any);

const TvSeriesRoute = TvSeriesImport.update({
  path: "/tv-series",
  getParentRoute: () => rootRoute,
} as any);

const MoviesRoute = MoviesImport.update({
  path: "/movies",
  getParentRoute: () => rootRoute,
} as any);

const BookmarksRoute = BookmarksImport.update({
  path: "/bookmarks",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/bookmarks": {
      id: "/bookmarks";
      path: "/bookmarks";
      fullPath: "/bookmarks";
      preLoaderRoute: typeof BookmarksImport;
      parentRoute: typeof rootRoute;
    };
    "/movies": {
      id: "/movies";
      path: "/movies";
      fullPath: "/movies";
      preLoaderRoute: typeof MoviesImport;
      parentRoute: typeof rootRoute;
    };
    "/tv-series": {
      id: "/tv-series";
      path: "/tv-series";
      fullPath: "/tv-series";
      preLoaderRoute: typeof TvSeriesImport;
      parentRoute: typeof rootRoute;
    };
    "/user-profile": {
      id: "/user-profile";
      path: "/user-profile";
      fullPath: "/user-profile";
      preLoaderRoute: typeof UserProfileImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/bookmarks": typeof BookmarksRoute;
  "/movies": typeof MoviesRoute;
  "/tv-series": typeof TvSeriesRoute;
  "/user-profile": typeof UserProfileRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/bookmarks": typeof BookmarksRoute;
  "/movies": typeof MoviesRoute;
  "/tv-series": typeof TvSeriesRoute;
  "/user-profile": typeof UserProfileRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/bookmarks": typeof BookmarksRoute;
  "/movies": typeof MoviesRoute;
  "/tv-series": typeof TvSeriesRoute;
  "/user-profile": typeof UserProfileRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/bookmarks" | "/movies" | "/tv-series" | "/user-profile";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/bookmarks" | "/movies" | "/tv-series" | "/user-profile";
  id: "__root__" | "/" | "/bookmarks" | "/movies" | "/tv-series" | "/user-profile";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  BookmarksRoute: typeof BookmarksRoute;
  MoviesRoute: typeof MoviesRoute;
  TvSeriesRoute: typeof TvSeriesRoute;
  UserProfileRoute: typeof UserProfileRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookmarksRoute: BookmarksRoute,
  MoviesRoute: MoviesRoute,
  TvSeriesRoute: TvSeriesRoute,
  UserProfileRoute: UserProfileRoute,
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/bookmarks",
        "/movies",
        "/tv-series",
        "/user-profile"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/bookmarks": {
      "filePath": "bookmarks.tsx"
    },
    "/movies": {
      "filePath": "movies.tsx"
    },
    "/tv-series": {
      "filePath": "tv-series.tsx"
    },
    "/user-profile": {
      "filePath": "user-profile.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
